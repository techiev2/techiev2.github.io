{"name":"techiev2 || pythonista || philosoraptor","tagline":"Mirroring http://sriramvelamur.wordpress.com, a changelog of work","body":"# Spec || Python library\r\n\r\nProbably one of the most interesting tools, that interested me much when I started out with Javascript was [JSPerf](http://jsperf.com) second only to [JSLint](http://jslint.com) (and to a smaller extent, [JSHint](http://jshint.com), thanks to an extreme affinity to Crockford's ideals]. The tool built over the Benchmark.js library, provides a *visual* comparison of parallel implementations to a problem in terms of ops/sec. I could find some [Benchrun](http://code.google.com/p/benchrun/)implementations of a solution to this particular issue but for some queer reason, didn't appeal to me so sat down to write one myself, much like the joke on competing standards.\r\n\r\nThe one pertinent concern according to me at least, is some kind of reporting that [Pypy - Speed](http://speed.pypy.org) offers. Graphical, for that is how you figure things out relatively easier irrespective of how much you love the shell and dumb terminal outputs.\r\n\r\nThere could be two ends to this implementation attempt; either it encompassing the possible ways of actually profiling implementations with a visually comprehensible report or me understanding the nuances of working in a Pythonic manner. A win-win in either case I guess. Created a [rudimentary port](https://github.com/techiev2/Spec) stripped out to work with timeit initially, from an existing local repository that provides dis data along with profile/cProfile stats. Suggestions welcome.\r\n\r\n\r\n***\r\n\r\n# Pyteomics || Python toolset\r\n\r\nTIL that I feel bad that this repository was not available a few years earlier. A python library to work with proteomics pipelines and MS/LC-MS data in addition to some other handy tools. Fork off and contribute if you are into proteomics data and using Python for working with the same. http://hg.theorchromo.ru/pyteomics\r\n\r\n***\r\n\r\n# Pythonista || Application\r\n[Cross posted from official Yammer post]\r\n\r\nDo you opine the snake and the apple to be one vicious combination ? Leaving the religious undercurrents aside, here is one more real functional serpent, apple duo that shows a lot of promise. If my memory serves me right, one of our iOS developers told me about this product ([Pythonista](http://www.macstories.net/stories/automating-ios-how-pythonista-changed-my-workflow/)) a few months back. Nice to know that someone has used it extensively and Python is making some inroads into the iOS developers' camp; if not purely for iOS related work, some acceptance at the least. Acceptance as i see is in itself a hard to come by commodity for Python in certain pockets of development. Hope it goes a longer distance.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}